imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

api_platform:

    # The title of the API.
    title: 'Dictionary API'
    # The description of the API.
    description: 'Dictionary API'
    # The version of the API.
    version: '1.0.0'
    formats:
        jsonld:   ['application/ld+json']
        jsonhal:  ['application/hal+json']
        json:     ['application/json']
        xml:      ['application/xml', 'text/xml']
        html:     ['text/html']
    # Enable the FOSUserBundle integration.
    enable_fos_user: true

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
          enum: string
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Nelmio CORS
nelmio_cors:
    defaults:
        allow_origin:   ["%cors_allow_origin%"]
        allow_methods:  ["POST", "PUT", "GET", "DELETE", "OPTIONS"]
        allow_headers:  ["content-type", "authorization"]
        expose_headers: ["link"]
        max_age:        3600
    paths:
        '^/': ~

# FOS User
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
      address: admin@localhost
      sender_name: admin

# Lexik JWT Authentication
lexik_jwt_authentication:
  private_key_path: '%jwt_private_key_path%'
  public_key_path: '%jwt_public_key_path%'
  pass_phrase: '%jwt_key_pass_phrase%'
  token_ttl: '%jwt_token_ttl%'

liip_imagine:
  # configure resolvers
  resolvers:
    # setup the default resolver
    default:
      # use the default web path
      web_path: ~
  # your filter sets are defined here
  filter_sets:
    # use the default cache configuration
    cache: ~
    # the name of the "filter set"
    my_thumb:
        # adjust the image quality to 75%
      quality: 75
      # list of transformations to apply (the "filters")
      filters:
        # create a thumbnail: set size to 120x90 and use the "outbound" mode
        # to crop the image when the size ratio of the input differs
        thumbnail: { size: [120, 90], mode: outbound }
  loaders:
    default:
      filesystem:
        data_root: "%kernel.root_dir%"